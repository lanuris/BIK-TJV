name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend_compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Grant execute permission for Maven Wrapper
        run: chmod a+x backend/mvnw
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Compile backend
        run: cd backend && ./mvnw clean compile

  backend_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Grant execute permission for Maven Wrapper
        run: chmod a+x backend/mvnw
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Run tests
        run: cd backend && ./mvnw test
      - name: Archive test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: backend/target/surefire-reports/

  backend_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Grant execute permission for Maven Wrapper
        run: chmod a+x backend/mvnw
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Package backend
        run: cd backend && ./mvnw package -DskipTests
      - name: Upload Maven artifacts
        uses: actions/upload-artifact@v4
        with:
          name: maven-artifacts
          path: backend/target/*.jar

  backend_container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run:
          cd backend &&
          docker build . --file Dockerfile --tag backend:latest


#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Set up Buildah
#        run: sudo apt-get update && sudo apt-get install -y buildah
#      - name: Log in to container registry
#        env:
#          CI_REGISTRY: ${{ secrets.CI_REGISTRY }}
#          CI_REGISTRY_USER: ${{ secrets.CI_REGISTRY_USER }}
#          CI_REGISTRY_PASSWORD: ${{ secrets.CI_REGISTRY_PASSWORD }}
#        run: echo ${{ secrets.GITHUB_TOKEN }} | buildah login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
#      - name: Build and push container image
#        env:
#          CI_REGISTRY_IMAGE: ${{ secrets.CI_REGISTRY_IMAGE }}
#        run: |
#          cd backend
#          buildah build --tag ${{ secrets.CI_REGISTRY_IMAGE }}/backend:latest -f Dockerfile .
#          buildah push ${{ secrets.CI_REGISTRY_IMAGE }}/backend

  backend_doc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Grant execute permission for Maven Wrapper
        run: chmod a+x backend/mvnw
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Generate Javadoc
        run: cd backend && ./mvnw javadoc:javadoc -DskipTests
      - name: Upload Javadoc
        uses: actions/upload-artifact@v4
        with:
          name: javadoc
          path: backend/target/site/apidocs/*

  frontend_compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Grant execute permission for Maven Wrapper
        run: chmod a+x frontend/mvnw
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/frontend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Compile frontend
        run: cd frontend && ./mvnw clean compile

  frontend_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Grant execute permission for Maven Wrapper
        run: chmod a+x frontend/mvnw
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/frontend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Run tests
        run: cd frontend && ./mvnw test
      - name: Archive test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: frontend/target/surefire-reports/

  frontend_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Grant execute permission for Maven Wrapper
        run: chmod a+x frontend/mvnw
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/frontend/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Package frontend
        run: cd frontend && ./mvnw package -DskipTests
      - name: Upload Maven artifacts
        uses: actions/upload-artifact@v4
        with:
          name: maven-artifacts
          path: frontend/target/*.jar

  frontend_container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: |
          cd frontend 
          docker build . --file Dockerfile --tag frontend:latest 
          docker push https://ghcr.io/lanuris/bik-tjv/frontend
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Set up Buildah
#        run: sudo apt-get update && sudo apt-get install -y buildah
#      - name: Log in to container registry
#        env:
#          CI_REGISTRY: ${{ secrets.CI_REGISTRY }}
#          CI_REGISTRY_USER: ${{ secrets.CI_REGISTRY_USER }}
#          CI_REGISTRY_PASSWORD: ${{ secrets.CI_REGISTRY_PASSWORD }}
#        run: echo ${{ secrets.GITHUB_TOKEN }} | buildah login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
#      - name: Build and push container image
#        env:
#          CI_REGISTRY_IMAGE: ${{ secrets.CI_REGISTRY_IMAGE }}
#        run: |
#          cd frontend
#          buildah build --tag ${{ secrets.CI_REGISTRY_IMAGE }}/frontend:latest -f Dockerfile .
#          buildah push ${{ secrets.CI_REGISTRY_IMAGE }}/frontend
